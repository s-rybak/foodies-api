{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "foodies app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of foodies app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Recipes",
      "description": "Operations about recipes."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by id",
        "operationId": "getRecipeById",
        "description": "Get recipe by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get recipe by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title",
                    "category",
                    "area",
                    "instructions",
                    "description",
                    "thumb",
                    "time",
                    "ingredients",
                    "owner"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Battenberg Cake"
                    },
                    "category": {
                      "type": "string",
                      "example": "Dessert"
                    },
                    "area": {
                      "type": "string",
                      "example": "British"
                    },
                    "instructions": {
                      "type": "string",
                      "example": "Heat oven to 180C/160C fan/gas 4 and line the base and ..."
                    },
                    "description": {
                      "type": "string",
                      "example": "A classic British cake made with almond sponge cake and ..."
                    },
                    "thumb": {
                      "type": "string",
                      "example": "https://ftp.goit.study/img/so-yummy/preview/Battenberg%20Cake.jpg"
                    },
                    "time": {
                      "type": "integer",
                      "example": 60
                    },
                    "ingredients": {
                      "type": "string",
                      "example": "640c2dd963a319ea671e367e"
                    },
                    "owner": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "id",
          "email",
          "password",
          "token",
          "verify",
          "verificationToken",
          "name",
          "avatar"
        ],
        "properties": {
          "id": {
            "description": "User's id",
            "type": "uuid",
            "example": "e44811b3-5b82-43c7-a187-817de4a21b8e"
          },
          "email": {
            "description": "User's e-mail",
            "type": "string",
            "example": "john.doe@email.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "dFs2#21j&"
          },
          "token": {
            "description": "JWT token for user authorization",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImU0NDgxMWIzLTViODItNDNjNy1hMTg3LTgxN2RlNGEyMWI4ZSIsImlhdCI6MTcyNTcwNjg5NCwiZXhwIjoxNzI1Nzg5Njk0fQ.qdNz3lH38zMBBp90zdJPHoTDrhkRga5qtC0WVuPiFoQ"
          },
          "verify": {
            "description": "User email verification status",
            "type": "boolean",
            "example": false
          },
          "verificationToken": {
            "description": "Token for user email verification",
            "example": "8eea741a-7439-4299-9d0e-3c00bfbae884"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "avatar": {
            "description": "Link to user's avatar",
            "type": "string",
            "example": "<avatars/avatar_751aa30d-c9b9-4a99-a5da-1d8f1935f357.png>"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}